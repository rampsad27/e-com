{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getlitem('cartitems') ? JSON.parse(localStorage.getItem(' cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getlitem","JSON","parse","getItem","initialState","cartItems","middleware","store"],"sources":["C:/Users/SAINA/OneDrive/Documents/minproj2-main/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer  } \nfrom './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n})\nconst cartItemsFromStorage = localStorage.getlitem( 'cartitems') ? JSON.parse\n(localStorage.getItem( ' cartItems')) :[]\n\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,kBAAkB,EAAEC,qBAAqB,QAC7C,4BAA4B;AACjC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,MAAMC,OAAO,GAAGP,eAAe,CAAC;EAC9BQ,WAAW,EAAEJ,kBAAkB;EAC/BK,cAAc,EAAEJ,qBAAqB;EACrCK,IAAI,EAAEJ;AACR,CAAC,CAAC;AACF,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,QAAQ,CAAE,WAAW,CAAC,GAAGC,IAAI,CAACC,KAAK,CAC5EH,YAAY,CAACI,OAAO,CAAE,YAAY,CAAC,CAAC,GAAE,EAAE;AAGzC,MAAMC,YAAY,GAAG;EACnBP,IAAI,EAAE;IAAEQ,SAAS,EAAEP;EAAqB;AAC1C,CAAC;AAED,MAAMQ,UAAU,GAAG,CAACjB,KAAK,CAAC;AAE1B,MAAMkB,KAAK,GAAGrB,WAAW,CACvBQ,OAAO,EACPU,YAAY,EACZd,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAU,CAAC,CAAC,CACpD;AAED,eAAeC,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}